name: FortiClient VPN Connection and SSH

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  vpn_and_ssh:
    runs-on: ubuntu-latest

    steps:
      - name: Update and Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-tools ppp libappindicator1 expect ca-certificates

      - name: Download and Install FortiClient
        run: |
          wget https://filestore.fortinet.com/forticlient/forticlient_vpn_7.4.0_1636_amd64.deb -O forticlient.deb
          sudo dpkg -i forticlient.deb

      - name: Create VPN Profile
        run: |
          echo '#!/usr/bin/expect -f' > create_vpn_profile.exp
          echo 'spawn /opt/forticlient/fortivpn edit myvpn' >> create_vpn_profile.exp
          echo 'expect -re "Type"' >> create_vpn_profile.exp
          echo 'send -- "1\r"' >> create_vpn_profile.exp
          echo 'expect -re "Remote Gateway:"' >> create_vpn_profile.exp
          echo 'send -- "${{ secrets.VPN_HOST }}\r"' >> create_vpn_profile.exp
          echo 'expect -re "Port"' >> create_vpn_profile.exp
          echo 'send -- "${{ secrets.VPN_PORT }}\r"' >> create_vpn_profile.exp
          echo 'expect -re "Authentication"' >> create_vpn_profile.exp
          echo 'send -- "3\r"' >> create_vpn_profile.exp
          echo 'expect -re "Certificate"' >> create_vpn_profile.exp
          echo 'send -- "3\r"' >> create_vpn_profile.exp
          echo 'expect eof' >> create_vpn_profile.exp
          chmod +x create_vpn_profile.exp
          ./create_vpn_profile.exp

      - name: Connect to FortiClient VPN
        run: |
          echo '#!/usr/bin/expect -f' > vpnconnect.exp
          echo 'spawn /opt/forticlient/fortivpn connect myvpn --user=${{ secrets.VPN_USER }} --password' >> vpnconnect.exp
          echo 'expect -exact "password:"' >> vpnconnect.exp
          echo 'send -- "${{ secrets.VPN_PWD }}\r"' >> vpnconnect.exp
          echo 'expect -re "Confirm "' >> vpnconnect.exp
          echo 'send -- "y\r"' >> vpnconnect.exp
          echo 'expect eof' >> vpnconnect.exp
          chmod +x vpnconnect.exp
          ./vpnconnect.exp

      - name: Execute SSH Commands
        uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          port: ${{ secrets.PROD_SSH_PORT }}
          user: ${{ secrets.PROD_SSH_USER }}
          pass: ${{ secrets.PROD_SSH_PASSWORD }}
          connect_timeout: 60s
          first_ssh: echo "SSH bağlantısı başarılı."
          scp: |
           docker exec -it 2d5c3835ffb7 /bin/bash
            cd /data/projects/MetropolUnFlowIntegration
            git pull https://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@github.com/mehmetmk35/NODE-RED_MetroFlowI_ntegration.git

     
           
